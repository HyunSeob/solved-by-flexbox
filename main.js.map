{"version":3,"sources":["node_modules/browser-pack/_prelude.js","main.js","assets/javascript/main.js","assets/javascript/analytics.js","assets/javascript/supports.js","node_modules/autotrack/lib/constants.js","node_modules/autotrack/lib/plugins/clean-url-tracker.js","node_modules/autotrack/lib/plugins/event-tracker.js","node_modules/autotrack/lib/plugins/media-query-tracker.js","node_modules/autotrack/lib/plugins/outbound-link-tracker.js","node_modules/autotrack/lib/plugins/page-visibility-tracker.js","node_modules/autotrack/lib/plugins/social-widget-tracker.js","node_modules/autotrack/lib/provide.js","node_modules/autotrack/lib/usage.js","node_modules/autotrack/lib/utilities.js","node_modules/autotrack/node_modules/object-assign/index.js","node_modules/date-now/index.js","node_modules/debounce/index.js","node_modules/dom-utils/lib/closest.js","node_modules/dom-utils/lib/delegate.js","node_modules/dom-utils/lib/get-attributes.js","node_modules/dom-utils/lib/matches.js","node_modules/dom-utils/lib/parents.js","node_modules/dom-utils/lib/parse-url.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","main","err","supports","flexbox","div","document","createElement","className","innerHTML","body","insertBefore","firstChild","window","onload","analytics","init","trackPageload","trackError","_interopRequire","obj","__esModule","_interopRequireWildcard","default","./analytics","./supports","2","createTrackers","trackErrors","trackCustomDimensions","requireAutotrackPlugins","sendInitialPageview","gaAll","stack","toString","nonInteraction","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","ALL_TRACKERS","Symbol","iterator","next","done","tracker","value","ga","trackingId","name","siteSpeedSampleRate","errorQueue","onerror","q","msg","file","line","col","error","eventCategory","eventAction","eventLabel","apply","_toConsumableArray","Object","keys","dimensions","forEach","key","NULL_VALUE","gaTest","set","_tracker$set","_defineProperty","TRACKING_VERSION","CLIENT_ID","get","WINDOW_ID","uuid","originalBuildHitTask","model","path","parseUrl","PAGE_PATH","HIT_TYPE","HIT_TIME","String","Date","HIT_ID","VISIBILITY_STATE","visibilityState","stripQuery","queryDimensionIndex","getDefinitionIndex","URL_QUERY_PARAMS","indexFilename","trailingSlash","definitions","dimensionIndex","items","media","visibleMetricIndex","metrics","PAGE_VISIBLE","hiddenMetricIndex","PAGE_HIDDEN","heartbeatTimeout","sessionTimeout","timeZone","fieldsObj","HIT_SOURCE","hitFilter","METRIC_VALUE","createGaProxy","trackers","command","_len","arguments","args","Array","_key","getByName","concat","definition","exec","shuffleArray","array","j","Math","floor","random","temp","arr","isArray","arr2","from","defineProperty","enumerable","configurable","writable","TEST_TRACKERS","filter","_ref","test","BREAKPOINT","RESOLUTION","ORIENTATION","b","replace","autotrack/lib/plugins/clean-url-tracker","autotrack/lib/plugins/event-tracker","autotrack/lib/plugins/media-query-tracker","autotrack/lib/plugins/outbound-link-tracker","autotrack/lib/plugins/page-visibility-tracker","autotrack/lib/plugins/social-widget-tracker","dom-utils/lib/parse-url","3","style","4","VERSION","DEV_ID","VERSION_PARAM","USAGE_PARAM","NULL_DIMENSION","5","CleanUrlTracker","opts","usage","track","plugins","CLEAN_URL_TRACKER","this","assign","overrideTrackerBuildHitTask","constants","provide","prototype","cleanUrlTask","location","page","url","oldPath","pathname","newPath","parts","split","join","isFilename","substr","query","search","originalTrackerBuildHitTask","bind","remove","originalTrackerSendHitTask","../constants","../provide","../usage","object-assign","6","EventTracker","EVENT_TRACKER","addEventListener","events","attributePrefix","handleEvents","selector","delegates","event","delegate","composed","useCapture","createFieldsObj","getAttributeFields","element","prefix","type","getAttribute","defaultFields","transport","attributeFields","userFields","hitType","send","destroy","../utilities","dom-utils/lib/delegate","7","MediaQueryTracker","MEDIA_QUERY_TRACKER","matchMedia","changeTemplate","changeTimeout","isObject","toArray","changeListeners","processMediaQueries","getMediaListener","mediaMap","debounce","mediaName","getMatchName","addChangeListeners","match","item","matches","mql","fn","handleChanges","addListener","push","newValue","oldValue","listener","removeListener","8","OutboundLinkTracker","OUTBOUND_LINK_TRACKER","linkSelector","shouldTrackOutboundLink","handleLinkInteractions","link","navigator","sendBeacon","target","href","hostname","protocol","slice","9","PageVisibilityTracker","PAGE_VISIBILITY_TRACKER","DEFAULT_SESSION_TIMEOUT","lastVisibilityChangeTime","handleVisibilityStateChange","overrideTrackerSendMethod","overrideTrackerSendHitTask","prevVisibilityState","sessionHasTimedOut","timeDeltaInSeconds","round","eventValue","metric","minutesSinceLastHit","lastHitTime","originalTrackerSendMethod","firstArg","isPageview","removeEventListener","10","SocialWidgetTracker","SOCIAL_WIDGET_TRACKER","addWidgetListeners","addTwitterEventHandlers","handleTweetEvents","handleFollowEvents","handleLikeEvents","handleUnlikeEvents","readyState","FB","addFacebookEventHandlers","twttr","ready","removeTwitterEventHandlers","unbind","Event","subscribe","removeFacebookEventHandlers","unsubscribe","region","data","socialNetwork","socialAction","socialTarget","screenName","screen_name","11","utilities","gaDevIds","pluginName","pluginConstructor","gaAlias","gaplugins","capitalize","./constants","./utilities","12","convertHexToBin","hex","parseInt","convertBinToHex","bin","padZeros","str","len","toAdd","flipBitOn","index","trackPlugin","pluginIndex","usageHex","usageBin","PLUGIN_COUNT","trackVersion","IMPRESSION_TRACKER","OUTBOUND_FORM_TRACKER","URL_CHANGE_TRACKER","plugin","13","getAttributes","opt_tracker","opt_hitFilter","opt_target","buildHitTask","attributes","attribute","indexOf","field","camelCase","domReady","callback","withTimeout","wait","called","setTimeout","p1","toUpperCase","charAt","dom-utils/lib/get-attributes","14","toObject","val","TypeError","shouldUseNative","test1","getOwnPropertyNames","test2","fromCharCode","order2","map","test3","letter","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","source","symbols","to","getOwnPropertySymbols","15","now","getTime","16","func","immediate","later","last","timestamp","timeout","result","context","callNow","date-now","17","parents","shouldCheckSelf","nodeType","parent","parentElements","./matches","./parents","18","closest","ancestor","eventType","composedPath","node","delegateTarget","./closest","19","attrs","attr","20","matchesSelector","nativeMatches","nodes","parentNode","querySelectorAll","proto","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","21","list","22","HTTP_PORT","HTTPS_PORT","DEFAULT_PORT","RegExp","cache","port","host","origin","hash","fragment"],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; };\n\nvar analytics = _interopRequireWildcard(require(\"./analytics\"));\n\nvar supports = _interopRequire(require(\"./supports\"));\n\n/**\n * The main script entry point for the site. Initalizes all the sub modules\n * analytics tracking, and the service worker.\n * @param {?Error} err Present if an error occurred loading the polyfills.\n */\nfunction main(err) {\n  // Add an `is-legacy` class on browsers that don't supports flexbox.\n  if (!supports.flexbox()) {\n    var div = document.createElement(\"div\");\n    div.className = \"Error\";\n    div.innerHTML = \"Your browser does not support Flexbox.\\n                     Parts of this site may not appear as expected.\";\n\n    document.body.insertBefore(div, document.body.firstChild);\n  }\n\n  // Delays running any analytics or registering the service worker\n  // to ensure the don't compete for load resources.\n  window.onload = function () {\n    analytics.init();\n    analytics.trackPageload();\n    if (err) {\n      analytics.trackError(err);\n    }\n  };\n}\n\nmain();\n\n},{\"./analytics\":2,\"./supports\":3}],2:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _slicedToArray = function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { var _arr = []; for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) { _arr.push(_step.value); if (i && _arr.length === i) break; } return _arr; } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } };\n\nvar _toConsumableArray = function (arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } };\n\nvar _defineProperty = function (obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); };\n\n/**\n * Initializes all the analytics setup. Creates trackers and sets initial\n * values on the trackers.\n */\nexports.init = init;\n\n/**\n * Tracks the initial pageload and performance timing data associated with it.\n */\nexports.trackPageload = trackPageload;\n\n/**\n * Tracks a JavaScript error.\n * @param {Error} err The error object to track.\n */\nexports.trackError = trackError;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire(\"autotrack/lib/plugins/clean-url-tracker\");\n\nrequire(\"autotrack/lib/plugins/event-tracker\");\n\nrequire(\"autotrack/lib/plugins/media-query-tracker\");\n\nrequire(\"autotrack/lib/plugins/outbound-link-tracker\");\n\nrequire(\"autotrack/lib/plugins/page-visibility-tracker\");\n\nrequire(\"autotrack/lib/plugins/social-widget-tracker\");\n\nvar parseUrl = _interopRequire(require(\"dom-utils/lib/parse-url\"));\n\n/**\n * Bump this when making backwards incompatible changes to the tracking\n * implementation. This allows you to create a segment or view filter\n * that isolates only data captured with the most recent tracking changes.\n */\nvar TRACKING_VERSION = \"1\";\n\n/**\n * A global list of tracker object, randomized to ensure no one tracker\n * data is always sent first.\n */\nvar ALL_TRACKERS = shuffleArray([{ name: \"t0\", trackingId: \"UA-40829935-1\" }, { name: \"testing\", trackingId: \"UA-40829935-4\" }]);\n\nvar TEST_TRACKERS = ALL_TRACKERS.filter(function (_ref) {\n  var name = _ref.name;\n  return /test/.test(name);\n});\nvar NULL_VALUE = \"(not set)\";\n\nvar metrics = {\n  PAGE_VISIBLE: \"metric1\",\n  PAGE_HIDDEN: \"metric2\" };\n\nvar dimensions = {\n  BREAKPOINT: \"dimension1\",\n  RESOLUTION: \"dimension2\",\n  ORIENTATION: \"dimension3\",\n  HIT_SOURCE: \"dimension4\",\n  URL_QUERY_PARAMS: \"dimension5\",\n  METRIC_VALUE: \"dimension6\",\n  CLIENT_ID: \"dimension7\",\n  HIT_TYPE: \"dimension8\",\n  HIT_TIME: \"dimension9\",\n  HIT_ID: \"dimension10\",\n  WINDOW_ID: \"dimension11\",\n  VISIBILITY_STATE: \"dimension12\",\n  TRACKING_VERSION: \"dimension13\",\n  PAGE_PATH: \"dimension14\"\n};\n\n// The command queue proxies.\nvar gaAll = createGaProxy(ALL_TRACKERS);\nvar gaTest = createGaProxy(TEST_TRACKERS);\nfunction init() {\n  createTrackers();\n  trackErrors();\n\n  trackCustomDimensions();\n  requireAutotrackPlugins();\n}\n\nfunction trackPageload() {\n  sendInitialPageview();\n}\n\nfunction trackError(err) {\n  gaAll(\"send\", \"event\", \"Script\", \"error\", err.stack || err.toString(), {\n    nonInteraction: true });\n}\n\n/**\n * Creates the trackers and sets the default transport and tracking\n * version fields. In non-production environments it also logs hits.\n */\nfunction createTrackers() {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = ALL_TRACKERS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var tracker = _step.value;\n\n      window.ga(\"create\", tracker.trackingId, \"auto\", tracker.name, {\n        siteSpeedSampleRate: 10\n      });\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  // Ensures all hits are sent via `navigator.sendBeacon()`.\n  // Note: this cannot via the `create` command.\n  gaAll(\"set\", \"transport\", \"beacon\");\n\n  // Log hits in non-production environments.\n  if (\"production\" != \"production\") {\n    gaAll(\"set\", \"sendHitTask\", function (model) {\n      var _window$console;\n\n      var paramsToIgnore = [\"v\", \"did\", \"t\", \"tid\", \"ec\", \"ea\", \"el\", \"ev\", \"a\", \"z\", \"ul\", \"de\", \"sd\", \"sr\", \"vp\", \"je\", \"fl\", \"jid\"];\n\n      var hitType = model.get(\"&t\");\n      var hitPayload = model.get(\"hitPayload\");\n      var hit = hitPayload.split(\"&\").map(decodeURIComponent).filter(function (item) {\n        var _item$split = item.split(\"=\");\n\n        var _item$split2 = _slicedToArray(_item$split, 1);\n\n        var param = _item$split2[0];\n\n        return !(param.charAt(0) === \"_\" || paramsToIgnore.indexOf(param) > -1);\n      });\n\n      var parts = [model.get(\"&tid\"), hitType];\n      if (hitType == \"event\") {\n        parts = [].concat(_toConsumableArray(parts), [model.get(\"&ec\"), model.get(\"&ea\"), model.get(\"&el\")]);\n        if (model.get(\"&ev\")) parts.push(model.get(\"&ev\"));\n      }\n\n      (_window$console = window.console).log.apply(_window$console, _toConsumableArray(parts).concat([hit]));\n    });\n  }\n}\n\n/**\n * Tracks any errors that may have occured on the page prior to analytics being\n * initialized, then adds an event handler to track future errors.\n */\nfunction trackErrors() {\n  // Errors that have occurred prior to this script running are stored on\n  // the `q` property of the window.onerror function.\n  var errorQueue = window.onerror.q || [];\n\n  // Override the temp `onerror()` handler to now send hits to GA.\n  window.onerror = function (msg, file, line, col, error) {\n    gaAll(\"send\", \"event\", {\n      eventCategory: \"Script\",\n      eventAction: \"uncaught error\",\n      eventLabel: error ? error.stack : \"\" + msg + \"\\n\" + file + \":\" + line + \":\" + col,\n      nonInteraction: true });\n  };\n\n  // Replay any stored errors in the queue.\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = errorQueue[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var error = _step.value;\n\n      window.onerror.apply(window, _toConsumableArray(error));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\n/**\n * Sets a default dimension value for all custom dimensions on all trackers.\n */\nfunction trackCustomDimensions() {\n  // Sets a default dimension value for all custom dimensions on all trackers.\n  // This obviously must be done before setting any other custom dimensions.\n  Object.keys(dimensions).forEach(function (key) {\n    gaAll(\"set\", dimensions[key], NULL_VALUE);\n  });\n\n  // Adds tracking of dimensions known at page load time.\n  gaTest(function (tracker) {\n    tracker.set((function () {\n      var _tracker$set = {};\n\n      _defineProperty(_tracker$set, dimensions.TRACKING_VERSION, TRACKING_VERSION);\n\n      _defineProperty(_tracker$set, dimensions.CLIENT_ID, tracker.get(\"clientId\"));\n\n      _defineProperty(_tracker$set, dimensions.WINDOW_ID, uuid());\n\n      return _tracker$set;\n    })());\n  });\n\n  // Adds tracking to record each the type, time, uuid, and visibility state\n  // of each hit immediately before it's sent.\n  gaTest(function (tracker) {\n    var originalBuildHitTask = tracker.get(\"buildHitTask\");\n    tracker.set(\"buildHitTask\", function (model) {\n      var path = model.get(\"page\") || parseUrl(model.get(\"location\")).path;\n      model.set(dimensions.PAGE_PATH, path), model.set(dimensions.HIT_TYPE, model.get(\"hitType\"), true);\n      model.set(dimensions.HIT_TIME, String(+new Date()), true);\n      model.set(dimensions.HIT_ID, uuid(), true);\n      model.set(dimensions.VISIBILITY_STATE, document.visibilityState, true);\n      originalBuildHitTask(model);\n    });\n  });\n}\n\n/**\n * Requires select autotrack plugins for each tracker.\n */\nfunction requireAutotrackPlugins() {\n  gaAll(\"require\", \"cleanUrlTracker\", {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    indexFilename: \"index.html\",\n    trailingSlash: \"add\" });\n  gaAll(\"require\", \"eventTracker\");\n  gaAll(\"require\", \"mediaQueryTracker\", {\n    definitions: [{\n      name: \"Breakpoint\",\n      dimensionIndex: 1,\n      items: [{ name: \"xs\", media: \"all\" }, { name: \"sm\", media: \"(min-width: 384px)\" }, { name: \"md\", media: \"(min-width: 576px)\" }, { name: \"lg\", media: \"(min-width: 768px)\" }]\n    }, {\n      name: \"Resolution\",\n      dimensionIndex: 2,\n      items: [{ name: \"1x\", media: \"all\" }, { name: \"1.5x\", media: \"(-webkit-min-device-pixel-ratio: 1.5), \" + \"(min-resolution: 144dpi)\" }, { name: \"2x\", media: \"(-webkit-min-device-pixel-ratio: 2), \" + \"(min-resolution: 192dpi)\" }]\n    }, {\n      name: \"Orientation\",\n      dimensionIndex: 3,\n      items: [{ name: \"landscape\", media: \"(orientation: landscape)\" }, { name: \"portrait\", media: \"(orientation: portrait)\" }]\n    }]\n  });\n  gaAll(\"require\", \"outboundLinkTracker\");\n  gaTest(\"require\", \"pageVisibilityTracker\", {\n    visibleMetricIndex: getDefinitionIndex(metrics.PAGE_VISIBLE),\n    hiddenMetricIndex: getDefinitionIndex(metrics.PAGE_HIDDEN),\n    heartbeatTimeout: 1,\n    sessionTimeout: 30,\n    timeZone: \"America/Los_Angeles\",\n    fieldsObj: _defineProperty({}, dimensions.HIT_SOURCE, \"pageVisibilityTracker\"),\n    hitFilter: function (model) {\n      model.set(dimensions.METRIC_VALUE, String(model.get(\"eventValue\")), true);\n    } });\n  gaAll(\"require\", \"socialWidgetTracker\");\n}\n\n/**\n * Sends the initial pageview.\n */\nfunction sendInitialPageview() {\n  gaAll(\"send\", \"pageview\", _defineProperty({}, dimensions.HIT_SOURCE, \"pageload\"));\n}\n\n/**\n * Creates a ga() proxy function that calls commands on all but the\n * excluded trackers.\n * @param {Array} trackers an array or objects containing the `name` and\n *     `trackingId` fields.\n * @return {Function} The proxied ga() function.\n */\nfunction createGaProxy(trackers) {\n  return function (command) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = trackers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        (function () {\n          var name = _step.value.name;\n\n          if (typeof command == \"function\") {\n            window.ga(function () {\n              command(window.ga.getByName(name));\n            });\n          } else {\n            window.ga.apply(window, [\"\" + name + \".\" + command].concat(args));\n          }\n        })();\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Accepts a custom dimension or metric and returns it's numerical index.\n * @param {string} definition The definition string (e.g. 'dimension1').\n * @return {number} The definition index.\n */\nfunction getDefinitionIndex(definition) {\n  return +/\\d+$/.exec(definition)[0];\n}\n\n/**\n * Randomizes array element order in-place using Durstenfeld shuffle algorithm.\n * http://goo.gl/91pjZs\n * @param {Array} array The input array.\n * @return {Array} The randomized array.\n */\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\nvar uuid = function b(a) {\n  return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([10000000] + -1000 + -4000 + -8000 + -100000000000).replace(/[018]/g, b);\n};\n/*eslint-enable */\n\n},{\"autotrack/lib/plugins/clean-url-tracker\":5,\"autotrack/lib/plugins/event-tracker\":6,\"autotrack/lib/plugins/media-query-tracker\":7,\"autotrack/lib/plugins/outbound-link-tracker\":8,\"autotrack/lib/plugins/page-visibility-tracker\":9,\"autotrack/lib/plugins/social-widget-tracker\":10,\"dom-utils/lib/parse-url\":22}],3:[function(require,module,exports){\n\"use strict\";\n\nvar supports = {};\nvar style = document.body.style;\n\nmodule.exports = {\n  flexbox: function flexbox() {\n    return supports.flexbox || (supports.flexbox = \"flexBasis\" in style || \"msFlexAlign\" in style || \"webkitBoxDirection\" in style);\n  }\n};\n\n},{}],4:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  VERSION: '1.0.0',\n  DEV_ID: 'i5iSjo',\n\n  VERSION_PARAM: '&_av',\n  USAGE_PARAM: '&_au',\n\n  NULL_DIMENSION: '(not set)'\n};\n\n},{}],5:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.CLEAN_URL_TRACKER);\n\n  this.opts = assign({\n    stripQuery: false,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash == 'remove') {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash == 'add') {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n\n},{\"../constants\":4,\"../provide\":11,\"../usage\":12,\"dom-utils/lib/parse-url\":22,\"object-assign\":14}],6:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.EVENT_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {composed: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {transport: 'beacon'};\n  var attributeFields = getAttributeFields(element, prefix);\n  var userFields = assign({}, this.opts.fieldsObj, attributeFields);\n  var hitType = attributeFields.hitType || 'event';\n\n  this.tracker.send(hitType, createFieldsObj(\n      defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n\n},{\"../provide\":11,\"../usage\":12,\"../utilities\":13,\"dom-utils/lib/delegate\":18,\"object-assign\":14}],7:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.MEDIA_QUERY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = assign({\n    definitions: null,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n},{\"../constants\":4,\"../provide\":11,\"../usage\":12,\"../utilities\":13,\"debounce\":16,\"object-assign\":14}],8:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.OUTBOUND_LINK_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n        this.handleLinkInteractions, {composed: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all interactions on link elements. A link is considered an outbound\n * link if its hostname property does not match location.hostname. When the\n * beacon transport method is not available, the links target is set to\n * \"_blank\" to ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkInteractions = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: event.type,\n      eventLabel: link.href\n    };\n\n    var userFields = assign({}, this.opts.fieldsObj,\n        getAttributeFields(link, this.opts.attributePrefix));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n},{\"../provide\":11,\"../usage\":12,\"../utilities\":13,\"dom-utils/lib/delegate\":18,\"dom-utils/lib/parse-url\":22,\"object-assign\":14}],9:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.PAGE_VISIBILITY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    hiddenMetricIndex: null,\n    visibleMetricIndex: null,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    // Rounds the time up to the nearest second. If the rounded value is zero\n    // use 1 instead since unset metrics default to 0.\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000) || 1;\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // Changes to hidden are non interaction hits by default\n    if (this.visibilityState == 'hidden') defaultFields.nonInteraction = true;\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n\n},{\"../provide\":11,\"../usage\":12,\"../utilities\":13,\"object-assign\":14}],10:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.SOCIAL_WIDGET_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n\n},{\"../provide\":11,\"../usage\":12,\"../utilities\":13,\"object-assign\":14}],11:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n\n},{\"./constants\":4,\"./utilities\":13}],12:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\n\n\nvar plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9\n};\nvar PLUGIN_COUNT = 9;\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    var toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  var usageHex = tracker.get(constants.USAGE_PARAM);\n  var usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set(constants.USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set(constants.VERSION_PARAM, constants.VERSION);\n}\n\n\nmodule.exports = {\n  track: function(tracker, plugin) {\n    trackVersion(tracker);\n    trackPlugin(tracker, plugin);\n  },\n  plugins: plugins\n};\n\n},{\"./constants\":4}],13:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar getAttributes = require('dom-utils/lib/get-attributes');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker, hit\n   * filter, and target element and returns a single object that can be used in\n   * `ga('send', ...)` commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @param {Element} opt_target If the hit originated from an interaction\n   *     with a DOM element, hitFilter is invoked with that element as the\n   *     second argument.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(\n      defaultFields, userFields, opt_tracker, opt_hitFilter, opt_target) {\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields, null, true);\n          model.set(userFields, null, true);\n          opt_hitFilter(model, opt_target);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Retrieves the attributes from an DOM element and returns a fields object\n   * for all attributes matching the passed prefix string.\n   * @param {Element} element The DOM element to get attributes from.\n   * @param {string} prefix An attribute prefix. Only the attributes matching\n   *     the prefix will be returned on the fields object.\n   * @return {Object} An object of analytics.js fields and values\n   */\n  getAttributeFields: function(element, prefix) {\n    var attributes = getAttributes(element);\n    var attributeFields = {};\n\n    Object.keys(attributes).forEach(function(attribute) {\n\n      // The `on` prefix is used for event handling but isn't a field.\n      if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n\n        var value = attributes[attribute];\n\n        // Detects Boolean value strings.\n        if (value == 'true') value = true;\n        if (value == 'false') value = false;\n\n        var field = utilities.camelCase(attribute.slice(prefix.length));\n        attributeFields[field] = value;\n      }\n    });\n\n    return attributeFields;\n  },\n\n\n  domReady: function(callback) {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', function fn() {\n        document.removeEventListener('DOMContentLoaded', fn);\n        callback();\n      });\n    } else {\n      callback();\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts a string containing hyphen or underscore word separators and\n   * converts it to camelCase.\n   * @param {string} str The string to camelCase.\n   * @return {string} The camelCased version of the string.\n   */\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n\n},{\"dom-utils/lib/get-attributes\":19,\"object-assign\":14}],14:[function(require,module,exports){\n'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n},{}],15:[function(require,module,exports){\nmodule.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n\n},{}],16:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n\n},{\"date-now\":15}],17:[function(require,module,exports){\nvar matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n\n},{\"./matches\":20,\"./parents\":21}],18:[function(require,module,exports){\nvar closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      var composedPath = event.composedPath();\n      for (var i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n\n},{\"./closest\":17,\"./matches\":20}],19:[function(require,module,exports){\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n\n},{}],20:[function(require,module,exports){\nvar proto = window.Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n\n},{}],21:[function(require,module,exports){\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n\n},{}],22:[function(require,module,exports){\nvar HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  var host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n\n},{}]},{},[1])\n\n","import * as analytics from './analytics';\nimport supports from './supports';\n\n\n/**\n * The main script entry point for the site. Initalizes all the sub modules\n * analytics tracking, and the service worker.\n * @param {?Error} err Present if an error occurred loading the polyfills.\n */\nfunction main(err) {\n  // Add an `is-legacy` class on browsers that don't supports flexbox.\n  if (!supports.flexbox()) {\n    let div = document.createElement('div');\n    div.className = 'Error';\n    div.innerHTML = `Your browser does not support Flexbox.\n                     Parts of this site may not appear as expected.`;\n\n    document.body.insertBefore(div, document.body.firstChild);\n  }\n\n  // Delays running any analytics or registering the service worker\n  // to ensure the don't compete for load resources.\n  window.onload = function() {\n    analytics.init();\n    analytics.trackPageload();\n    if (err) {\n      analytics.trackError(err);\n    }\n  };\n}\n\n\nmain();\n","import 'autotrack/lib/plugins/clean-url-tracker';\nimport 'autotrack/lib/plugins/event-tracker';\nimport 'autotrack/lib/plugins/media-query-tracker';\nimport 'autotrack/lib/plugins/outbound-link-tracker';\nimport 'autotrack/lib/plugins/page-visibility-tracker';\nimport 'autotrack/lib/plugins/social-widget-tracker';\nimport parseUrl from 'dom-utils/lib/parse-url';\n\n\n/**\n * Bump this when making backwards incompatible changes to the tracking\n * implementation. This allows you to create a segment or view filter\n * that isolates only data captured with the most recent tracking changes.\n */\nconst TRACKING_VERSION = '1';\n\n\n/**\n * A global list of tracker object, randomized to ensure no one tracker\n * data is always sent first.\n */\nconst ALL_TRACKERS = shuffleArray([\n  {name: 't0', trackingId: 'UA-40829935-1'},\n  {name: 'testing', trackingId: 'UA-40829935-4'}\n]);\n\n\nconst TEST_TRACKERS = ALL_TRACKERS.filter(({name}) => /test/.test(name));\nconst NULL_VALUE = '(not set)';\n\n\nconst metrics = {\n  PAGE_VISIBLE: 'metric1',\n  PAGE_HIDDEN: 'metric2',\n};\n\n\nconst dimensions = {\n  BREAKPOINT: 'dimension1',\n  RESOLUTION: 'dimension2',\n  ORIENTATION: 'dimension3',\n  HIT_SOURCE: 'dimension4',\n  URL_QUERY_PARAMS: 'dimension5',\n  METRIC_VALUE: 'dimension6',\n  CLIENT_ID: 'dimension7',\n  HIT_TYPE: 'dimension8',\n  HIT_TIME: 'dimension9',\n  HIT_ID: 'dimension10',\n  WINDOW_ID: 'dimension11',\n  VISIBILITY_STATE: 'dimension12',\n  TRACKING_VERSION: 'dimension13',\n  PAGE_PATH: 'dimension14'\n};\n\n\n// The command queue proxies.\nconst gaAll = createGaProxy(ALL_TRACKERS);\nconst gaTest = createGaProxy(TEST_TRACKERS);\n\n\n/**\n * Initializes all the analytics setup. Creates trackers and sets initial\n * values on the trackers.\n */\nexport function init() {\n  createTrackers();\n  trackErrors();\n\n  trackCustomDimensions();\n  requireAutotrackPlugins();\n}\n\n\n/**\n * Tracks the initial pageload and performance timing data associated with it.\n */\nexport function trackPageload() {\n  sendInitialPageview();\n}\n\n\n/**\n * Tracks a JavaScript error.\n * @param {Error} err The error object to track.\n */\nexport function trackError(err) {\n  gaAll('send', 'event', 'Script', 'error', err.stack || err.toString(), {\n    nonInteraction: true,\n  });\n}\n\n\n/**\n * Creates the trackers and sets the default transport and tracking\n * version fields. In non-production environments it also logs hits.\n */\nfunction createTrackers() {\n  for (let tracker of ALL_TRACKERS) {\n    window.ga('create', tracker.trackingId, 'auto', tracker.name, {\n      siteSpeedSampleRate: 10\n    });\n  }\n\n  // Ensures all hits are sent via `navigator.sendBeacon()`.\n  // Note: this cannot via the `create` command.\n  gaAll('set', 'transport', 'beacon');\n\n  // Log hits in non-production environments.\n  if (process.env.NODE_ENV != 'production') {\n    gaAll('set', 'sendHitTask', function(model) {\n      var paramsToIgnore = ['v', 'did', 't', 'tid', 'ec', 'ea', 'el', 'ev',\n          'a', 'z', 'ul', 'de', 'sd', 'sr', 'vp', 'je', 'fl', 'jid'];\n\n      var hitType = model.get('&t');\n      var hitPayload = model.get('hitPayload');\n      var hit = hitPayload\n          .split('&')\n          .map(decodeURIComponent)\n          .filter((item) => {\n            const [param] = item.split('=');\n            return !(param.charAt(0) === '_' ||\n                paramsToIgnore.indexOf(param) > -1);\n          });\n\n      var parts = [model.get('&tid'), hitType];\n      if (hitType == 'event') {\n        parts = [\n          ...parts,\n          model.get('&ec'),\n          model.get('&ea'),\n          model.get('&el'),\n        ];\n        if (model.get('&ev')) parts.push(model.get('&ev'));\n      }\n\n      window['console'].log(...parts, hit);\n    });\n  }\n}\n\n\n/**\n * Tracks any errors that may have occured on the page prior to analytics being\n * initialized, then adds an event handler to track future errors.\n */\nfunction trackErrors() {\n  // Errors that have occurred prior to this script running are stored on\n  // the `q` property of the window.onerror function.\n  const errorQueue = window.onerror.q || [];\n\n  // Override the temp `onerror()` handler to now send hits to GA.\n  window.onerror = (msg, file, line, col, error) => {\n    gaAll('send', 'event', {\n      eventCategory: 'Script',\n      eventAction: 'uncaught error',\n      eventLabel: error ? error.stack : `${msg}\\n${file}:${line}:${col}`,\n      nonInteraction: true,\n    });\n  };\n\n  // Replay any stored errors in the queue.\n  for (let error of errorQueue) {\n    window.onerror(...error);\n  }\n}\n\n\n/**\n * Sets a default dimension value for all custom dimensions on all trackers.\n */\nfunction trackCustomDimensions() {\n  // Sets a default dimension value for all custom dimensions on all trackers.\n  // This obviously must be done before setting any other custom dimensions.\n  Object.keys(dimensions).forEach((key) => {\n    gaAll('set', dimensions[key], NULL_VALUE);\n  });\n\n  // Adds tracking of dimensions known at page load time.\n  gaTest((tracker) => {\n    tracker.set({\n      [dimensions.TRACKING_VERSION]: TRACKING_VERSION,\n      [dimensions.CLIENT_ID]: tracker.get('clientId'),\n      [dimensions.WINDOW_ID]: uuid(),\n    });\n  });\n\n  // Adds tracking to record each the type, time, uuid, and visibility state\n  // of each hit immediately before it's sent.\n  gaTest((tracker) => {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    tracker.set('buildHitTask', (model) => {\n      const path = model.get('page') || parseUrl(model.get('location')).path;\n      model.set(dimensions.PAGE_PATH, path),\n\n      model.set(dimensions.HIT_TYPE, model.get('hitType'), true);\n      model.set(dimensions.HIT_TIME, String(+new Date), true);\n      model.set(dimensions.HIT_ID, uuid(), true);\n      model.set(dimensions.VISIBILITY_STATE, document.visibilityState, true);\n      originalBuildHitTask(model);\n    });\n  });\n}\n\n\n/**\n * Requires select autotrack plugins for each tracker.\n */\nfunction requireAutotrackPlugins() {\n  gaAll('require', 'cleanUrlTracker', {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    indexFilename: 'index.html',\n    trailingSlash: 'add',\n  });\n  gaAll('require', 'eventTracker');\n  gaAll('require', 'mediaQueryTracker', {\n    definitions: [\n      {\n        name: 'Breakpoint',\n        dimensionIndex: 1,\n        items: [\n          {name: 'xs', media: 'all'},\n          {name: 'sm', media: '(min-width: 384px)'},\n          {name: 'md', media: '(min-width: 576px)'},\n          {name: 'lg', media: '(min-width: 768px)'}\n        ]\n      },\n      {\n        name: 'Resolution',\n        dimensionIndex: 2,\n        items: [\n          {name: '1x',   media: 'all'},\n          {name: '1.5x', media: '(-webkit-min-device-pixel-ratio: 1.5), ' +\n                                '(min-resolution: 144dpi)'},\n          {name: '2x',   media: '(-webkit-min-device-pixel-ratio: 2), ' +\n                                '(min-resolution: 192dpi)'},\n        ]\n      },\n      {\n        name: 'Orientation',\n        dimensionIndex: 3,\n        items: [\n          {name: 'landscape', media: '(orientation: landscape)'},\n          {name: 'portrait',  media: '(orientation: portrait)'}\n        ]\n      }\n    ]\n  });\n  gaAll('require', 'outboundLinkTracker');\n  gaTest('require', 'pageVisibilityTracker', {\n    visibleMetricIndex: getDefinitionIndex(metrics.PAGE_VISIBLE),\n    hiddenMetricIndex: getDefinitionIndex(metrics.PAGE_HIDDEN),\n    heartbeatTimeout: 1,\n    sessionTimeout: 30,\n    timeZone: 'America/Los_Angeles',\n    fieldsObj: {[dimensions.HIT_SOURCE]: 'pageVisibilityTracker'},\n    hitFilter: (model) => {\n      model.set(dimensions.METRIC_VALUE, String(model.get('eventValue')), true);\n    },\n  });\n  gaAll('require', 'socialWidgetTracker');\n}\n\n\n/**\n * Sends the initial pageview.\n */\nfunction sendInitialPageview() {\n  gaAll('send', 'pageview', {[dimensions.HIT_SOURCE]: 'pageload'});\n}\n\n\n/**\n * Creates a ga() proxy function that calls commands on all but the\n * excluded trackers.\n * @param {Array} trackers an array or objects containing the `name` and\n *     `trackingId` fields.\n * @return {Function} The proxied ga() function.\n */\nfunction createGaProxy(trackers) {\n  return (command, ...args) => {\n    for (let {name} of trackers) {\n      if (typeof command == 'function') {\n        window.ga(() => {\n          command(window.ga.getByName(name));\n        });\n      } else {\n        window.ga(`${name}.${command}`, ...args);\n      }\n    }\n  };\n}\n\n\n/**\n * Accepts a custom dimension or metric and returns it's numerical index.\n * @param {string} definition The definition string (e.g. 'dimension1').\n * @return {number} The definition index.\n */\nfunction getDefinitionIndex(definition) {\n  return +/\\d+$/.exec(definition)[0];\n}\n\n\n/**\n * Randomizes array element order in-place using Durstenfeld shuffle algorithm.\n * http://goo.gl/91pjZs\n * @param {Array} array The input array.\n * @return {Array} The randomized array.\n */\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\nconst uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */\n","let supports = {};\nlet style = document.body.style;\n\nexport default {\n  flexbox: function() {\n    return supports.flexbox || (supports.flexbox = ('flexBasis' in style ||\n        'msFlexAlign' in style || 'webkitBoxDirection' in style));\n  }\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule.exports = {\n  VERSION: '1.0.0',\n  DEV_ID: 'i5iSjo',\n\n  VERSION_PARAM: '&_av',\n  USAGE_PARAM: '&_au',\n\n  NULL_DIMENSION: '(not set)'\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\n\n\n/**\n * Registers clean URL tracking on a tracker object. The clean URL tracker\n * removes query parameters from the page value reported to Google Analytics.\n * It also helps to prevent tracking similar URLs, e.g. sometimes ending a URL\n * with a slash and sometimes not.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction CleanUrlTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.CLEAN_URL_TRACKER);\n\n  this.opts = assign({\n    stripQuery: false,\n    queryDimensionIndex: null,\n    indexFilename: null,\n    trailingSlash: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  this.overrideTrackerBuildHitTask();\n}\n\n\n/**\n * Cleans the URL based on the preferences set in the configuration options.\n * @param {Object} model An analytics.js Model object.\n */\nCleanUrlTracker.prototype.cleanUrlTask = function(model) {\n\n  var location = model.get('location');\n  var page = model.get('page');\n  var url = parseUrl(page || location);\n\n  var oldPath = url.pathname;\n  var newPath = oldPath;\n\n  // If an index filename was provided, remove it if it appears at the end\n  // of the URL.\n  if (this.opts.indexFilename) {\n    var parts = newPath.split('/');\n    if (this.opts.indexFilename == parts[parts.length - 1]) {\n      parts[parts.length - 1] = '';\n      newPath = parts.join('/');\n    }\n  }\n\n  // Ensure the URL ends with or doesn't end with slash based on the\n  // `trailingSlash` option. Note that filename URLs should never contain\n  // a trailing slash.\n  if (this.opts.trailingSlash == 'remove') {\n      newPath = newPath.replace(/\\/+$/, '');\n  }\n  else if (this.opts.trailingSlash == 'add') {\n    var isFilename = /\\.\\w+$/.test(newPath);\n    if (!isFilename && newPath.substr(-1) != '/') {\n      newPath = newPath + '/';\n    }\n  }\n\n  // If a query dimensions index was provided, set the query string portion\n  // of the URL on that dimension. If no query string exists on the URL use\n  // the NULL_DIMENSION.\n  if (this.opts.stripQuery && this.opts.queryDimensionIndex) {\n    model.set('dimension' + this.opts.queryDimensionIndex,\n        url.query || constants.NULL_DIMENSION);\n  }\n\n  model.set('page', newPath + (!this.opts.stripQuery ? url.search : ''));\n};\n\n\n/**\n * Overrides the tracker's `buildHitTask` to check for proper URL formatting\n * on every hit (not just the initial pageview).\n */\nCleanUrlTracker.prototype.overrideTrackerBuildHitTask = function() {\n  this.originalTrackerBuildHitTask = this.tracker.get('buildHitTask');\n\n  this.tracker.set('buildHitTask', function(model) {\n    this.cleanUrlTask(model);\n    this.originalTrackerBuildHitTask(model);\n  }.bind(this));\n};\n\n\n/**\n * Restores all overridden tasks and methods.\n */\nCleanUrlTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n};\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers declarative event tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction EventTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.EVENT_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleEvents = this.handleEvents.bind(this);\n\n  var selector = '[' + this.opts.attributePrefix + 'on]';\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, selector,\n        this.handleEvents, {composed: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all clicks on elements with event attributes.\n * @param {Event} event The DOM click event.\n * @param {Element} element The delegated DOM element target.\n */\nEventTracker.prototype.handleEvents = function(event, element) {\n\n  var prefix = this.opts.attributePrefix;\n\n  // Ensures the event type matches the one specified on the element.\n  if (event.type != element.getAttribute(prefix + 'on')) return;\n\n  var defaultFields = {transport: 'beacon'};\n  var attributeFields = getAttributeFields(element, prefix);\n  var userFields = assign({}, this.opts.fieldsObj, attributeFields);\n  var hitType = attributeFields.hitType || 'event';\n\n  this.tracker.send(hitType, createFieldsObj(\n      defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nEventTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('eventTracker', EventTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar debounce = require('debounce');\nvar constants = require('../constants');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\nvar toArray = require('../utilities').toArray;\n\n\n/**\n * Declares the MediaQueryListener instance cache.\n */\nvar mediaMap = {};\n\n\n/**\n * Registers media query tracking.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction MediaQueryTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.MEDIA_QUERY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.matchMedia) return;\n\n  this.opts = assign({\n    definitions: null,\n    changeTemplate: this.changeTemplate,\n    changeTimeout: 1000,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  // Exits early if media query data doesn't exist.\n  if (!isObject(this.opts.definitions)) return;\n\n  this.opts.definitions = toArray(this.opts.definitions);\n  this.tracker = tracker;\n  this.changeListeners = [];\n\n  this.processMediaQueries();\n}\n\n\n/**\n * Loops through each media query definition, sets the custom dimenion data,\n * and adds the change listeners.\n */\nMediaQueryTracker.prototype.processMediaQueries = function() {\n  this.opts.definitions.forEach(function(definition) {\n    // Only processes definitions with a name and index.\n    if (definition.name && definition.dimensionIndex) {\n      var mediaName = this.getMatchName(definition);\n      this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n      this.addChangeListeners(definition);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Takes a definition object and return the name of the matching media item.\n * If no match is found, the NULL_DIMENSION value is returned.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension.\n * @return {string} The name of the matched media or NULL_DIMENSION.\n */\nMediaQueryTracker.prototype.getMatchName = function(definition) {\n  var match;\n\n  definition.items.forEach(function(item) {\n    if (getMediaListener(item.media).matches) {\n      match = item;\n    }\n  });\n  return match ? match.name : constants.NULL_DIMENSION;\n};\n\n\n/**\n * Adds change listeners to each media query in the definition list.\n * Debounces the changes to prevent unnecessary hits from being sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.addChangeListeners = function(definition) {\n  definition.items.forEach(function(item) {\n    var mql = getMediaListener(item.media);\n    var fn = debounce(function() {\n      this.handleChanges(definition);\n    }.bind(this), this.opts.changeTimeout);\n\n    mql.addListener(fn);\n    this.changeListeners.push({mql: mql, fn: fn});\n  }.bind(this));\n};\n\n\n/**\n * Handles changes to the matched media. When the new value differs from\n * the old value, a change event is sent.\n * @param {Object} definition A set of named media queries associated\n *     with a single custom dimension\n */\nMediaQueryTracker.prototype.handleChanges = function(definition) {\n  var newValue = this.getMatchName(definition);\n  var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n  if (newValue !== oldValue) {\n    this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n    var defaultFields = {\n      eventCategory: definition.name,\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(oldValue, newValue)\n    };\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nMediaQueryTracker.prototype.remove = function() {\n  for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n    listener.mql.removeListener(listener.fn);\n  }\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nMediaQueryTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Accepts a media query and returns a MediaQueryListener object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryListener} The matched media.\n */\nfunction getMediaListener(media) {\n  // Returns early if the media is cached.\n  if (mediaMap[media]) return mediaMap[media];\n\n  mediaMap[media] = window.matchMedia(media);\n  return mediaMap[media];\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar delegate = require('dom-utils/lib/delegate');\nvar parseUrl = require('dom-utils/lib/parse-url');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar getAttributeFields = require('../utilities').getAttributeFields;\n\n\n/**\n * Registers outbound link tracking on a tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction OutboundLinkTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.OUTBOUND_LINK_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    events: ['click'],\n    linkSelector: 'a',\n    shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n    fieldsObj: {},\n    attributePrefix: 'ga-',\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods.\n  this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n  // Creates a mapping of events to their delegates\n  this.delegates = {};\n  this.opts.events.forEach(function(event) {\n    this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n        this.handleLinkInteractions, {composed: true, useCapture: true});\n  }.bind(this));\n}\n\n\n/**\n * Handles all interactions on link elements. A link is considered an outbound\n * link if its hostname property does not match location.hostname. When the\n * beacon transport method is not available, the links target is set to\n * \"_blank\" to ensure the hit can be sent.\n * @param {Event} event The DOM click event.\n * @param {Element} link The delegated event target.\n */\nOutboundLinkTracker.prototype.handleLinkInteractions = function(event, link) {\n\n  if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n    // Opens outbound links in a new tab if the browser doesn't support\n    // the beacon transport method.\n    if (!navigator.sendBeacon) {\n      link.target = '_blank';\n    }\n\n    var defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Link',\n      eventAction: event.type,\n      eventLabel: link.href\n    };\n\n    var userFields = assign({}, this.opts.fieldsObj,\n        getAttributeFields(link, this.opts.attributePrefix));\n\n    this.tracker.send('event', createFieldsObj(\n        defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n  }\n};\n\n\n/**\n * Determines whether or not the tracker should send a hit when a link is\n * clicked. By default links with a hostname property not equal to the current\n * hostname are tracked.\n * @param {Element} link The link that was clicked on.\n * @param {Function} parseUrl A cross-browser utility method for url parsing.\n * @return {boolean} Whether or not the link should be tracked.\n */\nOutboundLinkTracker.prototype.shouldTrackOutboundLink =\n    function(link, parseUrl) {\n\n  var url = parseUrl(link.href);\n  return url.hostname != location.hostname &&\n      url.protocol.slice(0, 4) == 'http';\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nOutboundLinkTracker.prototype.remove = function() {\n  Object.keys(this.delegates).forEach(function(key) {\n    this.delegates[key].destroy();\n  }.bind(this));\n};\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\nvar isObject = require('../utilities').isObject;\n\n\nvar DEFAULT_SESSION_TIMEOUT = 30; // 30 minutes.\n\n\n/**\n * Registers outbound link tracking on tracker object.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction PageVisibilityTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.PAGE_VISIBILITY_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    sessionTimeout: DEFAULT_SESSION_TIMEOUT,\n    changeTemplate: this.changeTemplate,\n    hiddenMetricIndex: null,\n    visibleMetricIndex: null,\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n  this.visibilityState = document.visibilityState;\n\n  // Consider the plugin creation to be the start of the visibility change\n  // time calculations.\n  this.lastVisibilityChangeTime = +new Date;\n\n  // Binds methods to `this`.\n  this.handleVisibilityStateChange =\n      this.handleVisibilityStateChange.bind(this);\n\n  this.overrideTrackerSendMethod();\n  this.overrideTrackerSendHitTask();\n\n  document.addEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n}\n\n\n/**\n * Handles changes to `document.visibilityState`. This method sends events when\n * the visibility state changes during active sessions (active meaning the\n * session has not timed out). If the session has timed out, a return to a\n * visibility state of visible will trigger a new pageview (instead of a\n * visibility change event). Lastly, this method keeps track of the elapsed\n * time a document's visibility state was visible and sends that as the event\n * value for hidden events, allowing you to more accurately derive how long\n * a user spent active during a session.\n */\nPageVisibilityTracker.prototype.handleVisibilityStateChange = function() {\n\n  var defaultFields;\n  this.prevVisibilityState = this.visibilityState;\n  this.visibilityState = document.visibilityState;\n\n  if (this.sessionHasTimedOut()) {\n    // Prevents sending 'hidden' state hits when the session has timed out.\n    if (this.visibilityState == 'hidden') return;\n\n    if (this.visibilityState == 'visible') {\n      // If the session has timed out, a transition to \"visible\" should be\n      // considered a new pageview and a new session.\n      defaultFields = {transport: 'beacon'};\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n  else {\n    // Rounds the time up to the nearest second. If the rounded value is zero\n    // use 1 instead since unset metrics default to 0.\n    var timeDeltaInSeconds = Math.round(\n        (new Date - this.lastVisibilityChangeTime) / 1000) || 1;\n\n    defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Page Visibility',\n      eventAction: 'change',\n      eventLabel: this.opts.changeTemplate(\n          this.prevVisibilityState, this.visibilityState),\n      eventValue: timeDeltaInSeconds\n    };\n\n    // Changes to hidden are non interaction hits by default\n    if (this.visibilityState == 'hidden') defaultFields.nonInteraction = true;\n\n    // If a custom metric was specified for the current visibility state,\n    // give it the same as the event value.\n    var metric = this.opts[this.prevVisibilityState + 'MetricIndex'];\n    if (metric) defaultFields['metric' + metric] = timeDeltaInSeconds;\n\n    this.tracker.send('event', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  // Updates the time the last visibility state change event occurred, so\n  // change events can report the delta.\n  this.lastVisibilityChangeTime = +new Date;\n};\n\n\n/**\n * Returns true if the session has not timed out. A session timeout occurs when\n * more than `this.opts.sessionTimeout` minutes has elapsed since the\n * tracker sent the previous hit.\n * @return {boolean} True if the session has timed out.\n */\nPageVisibilityTracker.prototype.sessionHasTimedOut = function() {\n  var minutesSinceLastHit = (new Date - this.lastHitTime) / (60 * 1000);\n  return this.opts.sessionTimeout < minutesSinceLastHit;\n};\n\n\n/**\n * Overrides the `tracker.send` method to send a pageview hit before the\n * current hit being sent if the session has timed out and the current hit is\n * not a pageview itself.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendMethod = function() {\n  this.originalTrackerSendMethod = this.tracker.send;\n\n  this.tracker.send = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var firstArg = args[0];\n    var hitType = isObject(firstArg) ? firstArg.hitType : firstArg;\n    var isPageview = hitType == 'pageview';\n\n    if (!isPageview && this.sessionHasTimedOut()) {\n      var defaultFields = {transport: 'beacon'};\n      this.originalTrackerSendMethod.call(this.tracker, 'pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    }\n\n    this.originalTrackerSendMethod.apply(this.tracker, args);\n  }.bind(this);\n};\n\n\n/**\n * Overrides the tracker's `sendHitTask` to record the time of the previous\n * hit. This is used to determine whether or not a session has timed out.\n */\nPageVisibilityTracker.prototype.overrideTrackerSendHitTask = function() {\n  this.originalTrackerSendHitTask = this.tracker.get('sendHitTask');\n  this.lastHitTime = +new Date;\n\n  this.tracker.set('sendHitTask', function(model) {\n    this.originalTrackerSendHitTask(model);\n    this.lastHitTime = +new Date;\n  }.bind(this));\n};\n\n\n/**\n * Sets the default formatting of the change event label.\n * This can be overridden by setting the `changeTemplate` option.\n * @param {string} oldValue The value of the media query prior to the change.\n * @param {string} newValue The value of the media query after the change.\n * @return {string} The formatted event label.\n */\nPageVisibilityTracker.prototype.changeTemplate = function(oldValue, newValue) {\n  return oldValue + ' => ' + newValue;\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\n PageVisibilityTracker.prototype.remove = function() {\n  this.tracker.set('sendHitTask', this.originalTrackerSendHitTask);\n  this.tracker.send = this.originalTrackerSendMethod;\n\n  document.removeEventListener(\n      'visibilitychange', this.handleVisibilityStateChange);\n};\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* global FB, twttr */\n\n\nvar assign = require('object-assign');\nvar provide = require('../provide');\nvar usage = require('../usage');\nvar createFieldsObj = require('../utilities').createFieldsObj;\n\n\n/**\n * Registers social tracking on tracker object.\n * Supports both declarative social tracking via HTML attributes as well as\n * tracking for social events when using official Twitter or Facebook widgets.\n * @constructor\n * @param {Object} tracker Passed internally by analytics.js\n * @param {?Object} opts Passed by the require command.\n */\nfunction SocialWidgetTracker(tracker, opts) {\n\n  usage.track(tracker, usage.plugins.SOCIAL_WIDGET_TRACKER);\n\n  // Feature detects to prevent errors in unsupporting browsers.\n  if (!window.addEventListener) return;\n\n  this.opts = assign({\n    fieldsObj: {},\n    hitFilter: null\n  }, opts);\n\n  this.tracker = tracker;\n\n  // Binds methods to `this`.\n  this.addWidgetListeners = this.addWidgetListeners.bind(this);\n  this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n  this.handleTweetEvents = this.handleTweetEvents.bind(this);\n  this.handleFollowEvents = this.handleFollowEvents.bind(this);\n  this.handleLikeEvents = this.handleLikeEvents.bind(this);\n  this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n  if (document.readyState != 'complete') {\n    // Adds the widget listeners after the window's `load` event fires.\n    // If loading widgets using the officially recommended snippets, they\n    // will be available at `window.load`. If not users can call the\n    // `addWidgetListeners` method manually.\n    window.addEventListener('load', this.addWidgetListeners);\n  }\n  else {\n    this.addWidgetListeners();\n  }\n}\n\n\n/**\n * Invokes the methods to add Facebook and Twitter widget event listeners.\n * Ensures the respective global namespaces are present before adding.\n */\nSocialWidgetTracker.prototype.addWidgetListeners = function() {\n  if (window.FB) this.addFacebookEventHandlers();\n  if (window.twttr) this.addTwitterEventHandlers();\n};\n\n\n/**\n * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons. Note: this does not capture tweet or\n * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n */\nSocialWidgetTracker.prototype.addTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.bind('tweet', this.handleTweetEvents);\n      twttr.events.bind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n * official tweet and follow buttons.\n */\nSocialWidgetTracker.prototype.removeTwitterEventHandlers = function() {\n  try {\n    twttr.ready(function() {\n      twttr.events.unbind('tweet', this.handleTweetEvents);\n      twttr.events.unbind('follow', this.handleFollowEvents);\n    }.bind(this));\n  } catch(err) {}\n};\n\n\n/**\n * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.addFacebookEventHandlers = function() {\n  try {\n    FB.Event.subscribe('edge.create', this.handleLikeEvents);\n    FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n * official Facebook like button.\n */\nSocialWidgetTracker.prototype.removeFacebookEventHandlers = function() {\n  try {\n    FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n    FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n  } catch(err) {}\n};\n\n\n/**\n * Handles `tweet` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleTweetEvents = function(event) {\n  // Ignores tweets from widgets that aren't the tweet button.\n  if (event.region != 'tweet') return;\n\n  var url = event.data.url || event.target.getAttribute('data-url') ||\n      location.href;\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'tweet',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `follow` events emitted by the Twitter JS SDK.\n * @param {Object} event The Twitter event object passed to the handler.\n */\nSocialWidgetTracker.prototype.handleFollowEvents = function(event) {\n  // Ignore follows from widgets that aren't the follow button.\n  if (event.region != 'follow') return;\n\n  var screenName = event.data.screen_name ||\n      event.target.getAttribute('data-screen-name');\n\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Twitter',\n    socialAction: 'follow',\n    socialTarget: screenName\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `like` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the like event.\n */\nSocialWidgetTracker.prototype.handleLikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'like',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Handles `unlike` events emitted by the Facebook JS SDK.\n * @param {string} url The URL corresponding to the unlike event.\n */\nSocialWidgetTracker.prototype.handleUnlikeEvents = function(url) {\n  var defaultFields = {\n    transport: 'beacon',\n    socialNetwork: 'Facebook',\n    socialAction: 'unlike',\n    socialTarget: url\n  };\n  this.tracker.send('social', createFieldsObj(defaultFields,\n      this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n};\n\n\n/**\n * Removes all event listeners and instance properties.\n */\nSocialWidgetTracker.prototype.remove = function() {\n  window.removeEventListener('load', this.addWidgetListeners);\n  this.removeFacebookEventHandlers();\n  this.removeTwitterEventHandlers();\n};\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\n\n\nvar plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9\n};\nvar PLUGIN_COUNT = 9;\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    var toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  var usageHex = tracker.get(constants.USAGE_PARAM);\n  var usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set(constants.USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set(constants.VERSION_PARAM, constants.VERSION);\n}\n\n\nmodule.exports = {\n  track: function(tracker, plugin) {\n    trackVersion(tracker);\n    trackPlugin(tracker, plugin);\n  },\n  plugins: plugins\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar assign = require('object-assign');\nvar getAttributes = require('dom-utils/lib/get-attributes');\n\n\nvar utilities = {\n\n\n  /**\n   * Accepts default and user override fields and an optional tracker, hit\n   * filter, and target element and returns a single object that can be used in\n   * `ga('send', ...)` commands.\n   * @param {Object} defaultFields The default fields to return.\n   * @param {Object} userFields Fields set by the user to override the defaults.\n   * @param {Object} opt_tracker The tracker object to apply the hit filter to.\n   * @param {Function} opt_hitFilter A filter function that gets\n   *     called with the tracker model right before the `buildHitTask`. It can\n   *     be used to modify the model for the current hit only.\n   * @param {Element} opt_target If the hit originated from an interaction\n   *     with a DOM element, hitFilter is invoked with that element as the\n   *     second argument.\n   * @return {Object} The final fields object.\n   */\n  createFieldsObj: function(\n      defaultFields, userFields, opt_tracker, opt_hitFilter, opt_target) {\n\n    if (typeof opt_hitFilter == 'function') {\n      var originalBuildHitTask = opt_tracker.get('buildHitTask');\n      return {\n        buildHitTask: function(model) {\n          model.set(defaultFields, null, true);\n          model.set(userFields, null, true);\n          opt_hitFilter(model, opt_target);\n          originalBuildHitTask(model);\n        }\n      };\n    }\n    else {\n      return assign({}, defaultFields, userFields);\n    }\n  },\n\n\n  /**\n   * Retrieves the attributes from an DOM element and returns a fields object\n   * for all attributes matching the passed prefix string.\n   * @param {Element} element The DOM element to get attributes from.\n   * @param {string} prefix An attribute prefix. Only the attributes matching\n   *     the prefix will be returned on the fields object.\n   * @return {Object} An object of analytics.js fields and values\n   */\n  getAttributeFields: function(element, prefix) {\n    var attributes = getAttributes(element);\n    var attributeFields = {};\n\n    Object.keys(attributes).forEach(function(attribute) {\n\n      // The `on` prefix is used for event handling but isn't a field.\n      if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n\n        var value = attributes[attribute];\n\n        // Detects Boolean value strings.\n        if (value == 'true') value = true;\n        if (value == 'false') value = false;\n\n        var field = utilities.camelCase(attribute.slice(prefix.length));\n        attributeFields[field] = value;\n      }\n    });\n\n    return attributeFields;\n  },\n\n\n  domReady: function(callback) {\n    if (document.readyState == 'loading') {\n      document.addEventListener('DOMContentLoaded', function fn() {\n        document.removeEventListener('DOMContentLoaded', fn);\n        callback();\n      });\n    } else {\n      callback();\n    }\n  },\n\n\n  /**\n   * Accepts a function and returns a wrapped version of the function that is\n   * expected to be called elsewhere in the system. If it's not called\n   * elsewhere after the timeout period, it's called regardless. The wrapper\n   * function also prevents the callback from being called more than once.\n   * @param {Function} callback The function to call.\n   * @param {number} wait How many milliseconds to wait before invoking\n   *     the callback.\n   * @returns {Function} The wrapped version of the passed function.\n   */\n  withTimeout: function(callback, wait) {\n    var called = false;\n    setTimeout(callback, wait || 2000);\n    return function() {\n      if (!called) {\n        called = true;\n        callback();\n      }\n    };\n  },\n\n\n  /**\n   * Accepts a string containing hyphen or underscore word separators and\n   * converts it to camelCase.\n   * @param {string} str The string to camelCase.\n   * @return {string} The camelCased version of the string.\n   */\n  camelCase: function(str) {\n    return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n      return p1.toUpperCase();\n    });\n  },\n\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript object.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the test is an object.\n   */\n  isObject: function(value) {\n    return typeof value == 'object' && value !== null;\n  },\n\n\n  /**\n   * Indicates whether the passed variable is a JavaScript array.\n   * @param {*} value The input variable to test.\n   * @return {boolean} Whether or not the value is an array.\n   */\n  isArray: Array.isArray || function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n\n  /**\n   * Accepts a value that may or may not be an array. If it is not an array,\n   * it is returned as the first item in a single-item array.\n   * @param {*} value The value to convert to an array if it is not.\n   * @return {Array} The array-ified value.\n   */\n  toArray: function(value) {\n    return utilities.isArray(value) ? value : [value];\n  }\n};\n\nmodule.exports = utilities;\n","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n","\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n","var matches = require('./matches');\nvar parents = require('./parents');\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {?Element} The matching element or undefined.\n */\nmodule.exports = function closest(element, selector, shouldCheckSelf) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n\n  var parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n};\n","var closest = require('./closest');\nvar matches = require('./matches');\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {Element} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {Function} callback A function to run any time the event happens.\n * @param {Object} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n module.exports = function delegate(\n    ancestor, eventType, selector, callback, opts) {\n\n  opts = opts || {};\n\n  // Defines the event listener.\n  var listener = function(event) {\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      var composedPath = event.composedPath();\n      for (var i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    }\n    // Otherwise check the parents.\n    else {\n      var delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n};\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nmodule.exports = function getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n};\n","var proto = window.Element.prototype;\nvar nativeMatches = proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n function matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|String>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nmodule.exports = function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, test);\n    }\n    // if it has a length property iterate over the items\n    // and return true if any match.\n    else if ('length' in test) {\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n};\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {Element} element The DOM element whose parents to get.\n * @return {Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nmodule.exports = function parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    list.push(element = element.parentNode);\n  }\n  return list;\n};\n","var HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nvar a = document.createElement('a');\nvar cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {Object} An object with the same properties as a `Location`\n *    plus the convience properties `path` and `query`.\n */\nmodule.exports = function parseUrl(url) {\n\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  var port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  var host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n\n    // Expose additional helpful properties not part of the Location object.\n    fragment: a.hash.slice(1), // The hash without the starting \"#\".\n    path: pathname + a.search, // The pathname and the search query (w/o hash).\n    query: a.search.slice(1) // The search without the starting \"?\".\n  };\n};\n"]}